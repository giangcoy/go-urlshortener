
openapi: 3.0.0
info:
  version: v1.0.27
  x-dochub:
    author: APG_Development@group.apple.com, Payments_Engineering_Group@group.apple.com
    vertical: APS
    portfolio: payments
    category: developer-guide
    state: development
  title: Apple Payment System Wallet Integration API Spec
  description: Payments System Wallet Integration Spec providing instruction that allow partners to implement initiate_link, link, account query, unlink,charge, reversal, refund, challenge initiate and challenge verify. The spec also supports one-time payment APIs such as single_charge, transaction/query and transaction/notify.It provides a fast and easy way to make a single, non-recurring payment with Apple Payment System. APIs are built on REST/RPC principles, ensuring that it is a well structured and predictable API. APIs incorporate strong HTTP features such as verbs and response codes for ease of use. The APIs implemented should support Idempotence. Base server url will be 'https://partnerUrl/apple/api/v1'.
  contact:
    name: Apple Payment System
    email: Payments_Engineering_Group@group.apple.com
servers:
  - url: https://partnerurl/apple/api/v1
    variables:
      version:
        default: v1
        description: The API version being addressed by the customer.
paths:
  /account/initiate_link:
    post:
      summary: Account Initiate Link
      description: Initiate the process of linking the payment account. The URL will be retrieved to redirect the user to start the linking process.
      operationId: /account/initiate_link
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountInitiateLinkRequest'
        description: The payment account linking initation request from the client.
        required: true
      responses:
        '200':
          description: 'Linking payment account was initiated  and the redirect URL was retrieved if succeeded. It contains the generic account response and a 200 OK header message. '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountInitiateLinkResponse'
  /account/query:
    post:
      summary: Account Query
      description: Query the payment account information like userAccountId etc. from partner system.
      operationId: /account/query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountQueryRequest'
        description: The query request from the client
        required: true
      responses:
        '200':
          description: 'The account information was  retrieved if succeeded. It contains the generic query response and a 200 OK header message. '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountQueryResponse'
  /account/link:
    post:
      summary: Account Link
      description: Link payment method to the account of the user.
      operationId: /account/link
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountLinkRequest'
        description: Link account request from the client.
        required: true
      responses:
        '200':
          description: A link account response to the client contains the generic link account response and a 200 OK header message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountLinkResponse'
  /charge:
    post:
      summary: Charge
      description: Perform a Charge (a.k.a. Sale, a.k.a. Purchase) for goods and/or services using the wallet payment token.
      operationId: /charge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChargeRequest'
        description: Charge request from the client.
        required: true
      responses:
        '200':
          description: A charge response to the client contains the generic charge response and a 200 OK header message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargeResponse'
  /reverse:
    post:
      summary: Reversal
      description: Perform a Reversal (a.k.a. Void, a.k.a. Cancel) for the referenced original request, to 'undo' the previous request if possible; can also be used in case of timeouts or similar errors.
      operationId: /reverse
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReversalRequest'
        description: Reversal request from the client.
        required: true
      responses:
        '200':
          description: A reversal response to the client contains the generic reversal response and a 200 OK header message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReversalResponse'
  /refund:
    post:
      summary: Refund
      description: 'Perform a Refund, referenced to a previous charge transaction. '
      operationId: /refund
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundRequest'
        description: Refund request from the client.
        required: true
      responses:
        '200':
          description: A response to the client contains the generic refund response and a 200 OK header message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundResponse'
  /challenge/initiate:
    post:
      summary: Challenge Initiate
      description: Initiate the SMS challenge to the user. This api does not have idempotency requirement.
      operationId: /challenge/initiate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChallengeInitiateRequest'
        description: Challenge initiation request from the client.
        required: true
      responses:
        '200':
          description: A  challenge initiation response to the client contains the  challenge initiate response and a 200 OK header message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengeInitiateResponse'
  /challenge/verify:
    post:
      summary: Challenge Verify
      description: Wallet payment method challenge verification.
      operationId: /challenge/verify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChallengeVerifyRequest'
        description: Challenge verification request from the client.
        required: true
      responses:
        '200':
          description: A challenge verify response to the client contains the  challenge verify response and a 200 OK header message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChallengeVerifyResponse'
  /account/unlink:
    post:
      summary: Account Unlink
      description: Unlink payment method from the account of the user - for removing the payment method.
      operationId: /account/unlink
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUnlinkRequest'
        description: Unlink account request from the client.
        required: true
      responses:
        '200':
          description: An unlink account response to the client contains the unlink account response and a 200 OK header message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountUnlinkResponse'
  /customer/query:
    post:
      summary: Customer Query
      description: Query the userAccountId associated with the userLogin in partner system.
      operationId: /customer/query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomerQueryRequest'
        description: The query request from the client
        required: true
      responses:
        '200':
          description: 'The account information was  retrieved if succeeded. It contains the generic query response and a 200 OK header message. '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomerQueryResponse'
  /fraud/query:
    post:
      summary: Fraud Query
      description: Query the fraud related data associated with the userAccountId in partner system.
      operationId: /fraud/query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FraudQueryRequest'
        description: The query request from the client.
        required: true
      responses:
        '200':
          description: 'The fraud related data was  retrieved if succeeded. It contains the generic query response and a 200 OK header message. '
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FraudQueryResponse'
  /single_charge:
    post:
      summary: Single Charge
      description: Initiate the process of one-time payment by performing a single charge operation. A URL will be retrieved to redirect the user to start one-time payment process with Apple Payment System.
      operationId: /single_charge
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SingleChargeRequest'
        description: Single charge request from the client.
        required: true
      responses:
        '200':
          description: A single charge response to the client contains the generic charge response and a 200 OK header message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SingleChargeResponse'
  /transaction/query:
    post:
      summary: Transaction Query
      description: Get the status of the specified transaction.
      operationId: /transaction/query
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryTransactionRequest'
        description: Transaction Query request from the client.
        required: true
      responses:
        '200':
          description: The status of the specified transaction was successfully retrieved. It contains the generic poll response and a 200 OK header message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryTransactionResponse'
  /transaction/notify:
    post:
      summary: Transaction Notify
      description: This is the Apple inbound notification API that payment partner uses to inform Apple Payment System when the payment processing reaches a final state of success or failure.
      operationId: /transaction/notify
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotifyTransactionRequest'
        description: Inbound notification request from payment partner.
        required: true
      responses:
        '200':
          description: The status of the specified transaction was successfully received by Apple Payment System. It contains the generic transaction notify response and a 200 OK header message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotifyTransactionResponse'
  /single_charge/cancel:
    post:
      summary: Cancel Single Charge
      description: This API is used to cancel a specific Single Charge. The originalTransactionId field in the request specifies the transactionId of the Single Charge which should be canceled. When partner receives a cancel request for a transaction ID, partner should not allow the customer to complete the payment for that transactionID through the partner UI anymore. Partner should display message in their UI to inform customer the payment session has expired when customer is attempting to complete the payment. However, if the transaction has already been paid when partner receives the cancel request, partner can return the response code DECLINED_ORIGINAL_TRANSACTION_ALREADY_COMPLETED.
      operationId: /single_charge/cancel
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelSingleChargeRequest'
        description: Cancel request from the client.
        required: true
      responses:
        '200':
          description: A cancel response to the client contains the generic cancel response and a 200 OK header message.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelSingleChargeResponse'
components:
  schemas:
    AccountInitiateLinkRequest:
      type: object
      description: The account linking initiation data.
      required:
        - merchantId
        - accountLinkId
        - successReturnURL
      properties:
        merchantId:
          type: string
          description: Unique ID generated by Apple to identify the corresponding Apple merchant. Due to different line of business and subsidiaries within Apple Inc, there may be different merchant IDs that Apple payment system will send to our wallet partners.  Wallet partner should be able to group the transactions with the same merchantID in the same settlement file and generate separate settlement files for different merchant IDs. Please refer to the settlement file specification for more detail information regarding how merchantID is being indicated in the settlement file.
          minLength: 1
          maxLength: 256
          example: a merchantId string
        countryCode:
          $ref: '#/components/schemas/CountryCodeFormat'
        walletName:
          type: string
          description: This value identifies the name of the wallet and it will be a fixed value assigned by Apple to each wallet partner.
          minLength: 1
          maxLength: 40
        accountLinkId:
          type: string
          description: Unique ID generated on the merchant side to identify this specific linking between an Apple account and a wallet account. It is used for idempotency enforcement.
          minLength: 1
          maxLength: 256
          example: 1610651130445u1700942051
        successReturnURL:
          type: string
          description: URL that wallet partner should redirect to after user has accepted to link the accounts.
          minLength: 1
          maxLength: 1024
          example: https://abc
        cancelReturnURL:
          type: string
          description: URL that wallet partner should redirect to after user decides not to proceed with linking the accounts.
          minLength: 1
          maxLength: 1024
          example: https://xyz
        appInstalled:
          type: boolean
          description: Whether the user has the wallet mobile App installed on the device that account linking is initiating on.
          example: true
        appVersion:
          type: string
          description: If appInstalled is true, the version of the App is indicated here.
          minLength: 1
          maxLength: 64
          example: 10.2.13.9000
        deviceType:
          type: string
          description: The device type that the user is initiating the account linking from, e.g. Phone, Desktop.
          x-nullable: true
          enum:
            - Desktop
            - Phone
            - Tablet
            - Watch
            - TV
    AccountInitiateLinkResponse:
      type: object
      required:
        - responseCode
      description: Wallet account information in the response message.
      properties:
        responseCode:
          $ref: '#/components/schemas/AccountInitiateLinkResponseCode'
        responseCodeMessage:
          type: string
          description: This field is populated by wallet partner to provide partner specific information for the response.
          minLength: 1
          maxLength: 100
          example: a description about the response
        partnerRedirectURL:
          type: string
          description: The wallet partner redirect url to start the account linking process.  This URL should take user to confirm the account link on the wallet partner side.
          example: https://example.com/signup/abc
    AccountQueryRequest:
      type: object
      description: This API  return userAccountID and maskedUserLogin.
      required:
        - merchantId
        - accountLinkId
      properties:
        merchantId:
          type: string
          description: Unique ID generated by Apple to identify the corresponding Apple merchant. Due to different line of business and subsidiaries within Apple Inc, there may be different merchant IDs that Apple payment system will send to our wallet partners.  Wallet partner should be able to group the transactions with the same merchantID in the same settlement file and generate separate settlement files for different merchant IDs. Please refer to the settlement file specification for more detail information regarding how merchantID is being indicated in the settlement file.
          minLength: 1
          maxLength: 256
          example: abcdefg
        countryCode:
          $ref: '#/components/schemas/CountryCodeFormat'
        walletName:
          type: string
          description: This value identifies the name of the wallet and it will be a fixed value assigned by Apple to each wallet partner.
          minLength: 1
          maxLength: 40
        accountLinkId:
          type: string
          description: Unique ID generated on the merchant side to identify this specific linking between an Apple account and a wallet account. It is used for idempotency enforcement.
          minLength: 1
          maxLength: 256
          example: 123456789a998488888
    AccountQueryResponse:
      type: object
      required:
        - responseCode
      description: Wallet account information in the response message.
      properties:
        responseCode:
          $ref: '#/components/schemas/AccountQueryResponseCode'
        responseCodeMessage:
          type: string
          description: This field is populated by wallet partner to provide partner specific information for the response.
          minLength: 1
          maxLength: 100
          example: a description about the response.
        userAccountId:
          type: string
          description: Unique user account ID from the wallet partner system. For PII purpose, wallet partner can provide a hashed or encrypted user account ID. This ID will be used by merchant to uniquely identify the user’s wallet account.
          maxLength: 256
          example: '2832020930293'
        maskedUserLogin:
          type: string
          description: Masked user login name associated with the partner system. For phone number, mask everything except the last 4 digits. e.g "140812346279" will be "\*\*\*\*\*\*\*6279". For email, mask everything except first 3 characters and first 3 characters after @. e.g "jameschu@apple.com"  will be "jam\*\*\*\*\*\@app\*\*\*\*". If character number before @ is less than 4, mask the last character before @.  e.g "xyz@gmail.com" will be "xy\*\@gma\*\*\*\*\*".
          minLength: 1
          maxLength: 256
          x-masklog: FULL
          example: '*******4538'
    CustomerQueryRequest:
      type: object
      description: This API return the userAccountId associated with the userLogin in the partner's system.
      required:
        - merchantId
        - userLogin
      properties:
        merchantId:
          type: string
          description: Unique ID generated by Apple to identify the corresponding Apple merchant. Due to different line of business and subsidiaries within Apple Inc, there may be different merchant IDs that Apple payment system will send to our wallet partners.  Wallet partner should be able to group the transactions with the same merchantID in the same settlement file and generate separate settlement files for different merchant IDs. Please refer to the settlement file specification for more detail information regarding how merchantID is being indicated in the settlement file.
          minLength: 1
          maxLength: 256
          example: abcdefg
        countryCode:
          $ref: '#/components/schemas/CountryCodeFormat'
        walletName:
          type: string
          description: This value identifies the name of the wallet and it will be a fixed value assigned by Apple to each wallet partner.
          minLength: 1
          maxLength: 40
        userLogin:
          type: string
          description: user login in parter's system. It is used for idempotency enforcement.
          minLength: 1
          maxLength: 256
          example: jameswang@xyz.com
    CustomerQueryResponse:
      type: object
      required:
        - responseCode
      description: Wallet account information in the response message.
      properties:
        responseCode:
          $ref: '#/components/schemas/AccountQueryResponseCode'
        responseCodeMessage:
          type: string
          description: This field is populated by wallet partner to provide partner specific information for the response.
          minLength: 1
          maxLength: 100
          example: a description about the response
        userAccountId:
          type: string
          description: Unique user account ID from the wallet partner system. For PII purpose, wallet partner can provide a hashed or encrypted user account ID. This ID will be used by merchant to uniquely identify the user’s wallet account.
          minLength: 1
          maxLength: 256
          example: '2832020930293'
    FraudQueryRequest:
      type: object
      description: This API return the fraud related data associated with the userAccountId in the partner's system.
      required:
        - merchantId
        - countryCode
        - walletName
        - accountLinkId
      properties:
        merchantId:
          type: string
          description: Unique ID generated by Apple to identify the corresponding Apple merchant. Due to different line of business and subsidiaries within Apple Inc, there may be different merchant IDs that Apple payment system will send to our wallet partners.  Wallet partner should be able to group the transactions with the same merchantID in the same settlement file and generate separate settlement files for different merchant IDs. Please refer to the settlement file specification for more detail information regarding how merchantID is being indicated in the settlement file.
          minLength: 1
          maxLength: 256
          example: abcdefg
        countryCode:
          $ref: '#/components/schemas/CountryCodeFormat'
        walletName:
          type: string
          description: This value identifies the name of the wallet and it will be a fixed value assigned by Apple to each wallet partner.
          minLength: 1
          maxLength: 40
        accountLinkId:
          type: string
          description: Unique ID generated on the merchant side to identify this specific linking between an Apple account and a wallet account. It is used for idempotency enforcement.
          minLength: 1
          maxLength: 256
          example: 1610651130445u1700942051
    FraudQueryResponse:
      type: object
      required:
        - responseCode
      description: Wallet account information in the response message.
      properties:
        responseCode:
          $ref: '#/components/schemas/AccountQueryResponseCode'
        responseCodeMessage:
          type: string
          description: This field is populated by wallet partner to provide partner specific information for the response.
          minLength: 1
          maxLength: 100
          example: a description about the response
        fraudLabels:
          type: string
          description: A Map<String, String> of fraud related data in the partner system associated with the accountLinkId. <br> \"KycStatus\"(0 - non KYC , 1 - partial KYC, 2 - full KYC) -> \"2\" <br>\"AccountTenure\"(duration from when payment account is created) -> \"30\" <br>\"TotalPurchase\"(total number of purchases accumulated in past X days) -> \"4\" <br>\"FraudScore\"(1 - Extremely high, Strongly advise Apple to directly stop subsequent transaction attempts.  2 - High, Advise Apple to trigger OTP challenge. 3 - Medium, Up to Apple to decide whether to trigger OTP challenge. 4 - Low, Advise not to trigger OTP challenge.) -> \"1\" <br>\"DormancyStatus\"(if user has activities in more than 10 days out of 90 days, then 0; else 1.) -> \"0\" <br> \"AccountSecurity\"(if the account has 2-factor authentication enabled,  if enabled then 1; else 0) <br> \"TrustedPhoneNumber\"(masked phohe number)
          additionalProperties:
            type: string
          example:
            KycStatus: '2'
            FraudScore: '1'
    AccountLinkRequest:
      type: object
      description: The specific details of the Wallet link account.
      required:
        - merchantId
        - accountLinkId
      properties:
        merchantId:
          type: string
          description: Unique ID generated by Apple to identify the corresponding Apple merchant. Due to different line of business and subsidiaries within Apple Inc, there may be different merchant IDs that Apple payment system will send to our wallet partners.  Wallet partner should be able to group the transactions with the same merchantID in the same settlement file and generate separate settlement files for different merchant IDs. Please refer to the settlement file specification for more detail information regarding how merchantID is being indicated in the settlement file.
          minLength: 1
          maxLength: 256
          example: abcdefg
        countryCode:
          $ref: '#/components/schemas/CountryCodeFormat'
        walletName:
          type: string
          description: This value identifies the name of the wallet and it will be a fixed value assigned by Apple to each wallet partner.
          minLength: 1
          maxLength: 40
        accountLinkId:
          type: string
          description: Unique ID generated on the merchant side to identify this specific linking between an Apple account and a wallet account. It is used for idempotency enforcement.
          minLength: 1
          maxLength: 256
          example: 1610651130445u1700942051
    AccountLinkResponse:
      type: object
      required:
        - responseCode
      description: Wallet account information in the response message.
      properties:
        responseCode:
          $ref: '#/components/schemas/AccountLinkResponseCode'
        responseCodeMessage:
          type: string
          description: This field is populated by wallet partner to provide partner specific information for the response.
          minLength: 1
          maxLength: 100
          example: a description about the response
        chargeToken:
          type: string
          description: Charge token generated by the wallet partner as a result of the binding process.  This charge token will be passed by Apple to wallet partner in the Charge API.
          minLength: 1
          maxLength: 256
          example: '123456789'
        userAccountId:
          type: string
          description: Unique user account ID from the wallet partner system. For PII purpose, wallet partner can provide a hashed or encrypted user account ID. This ID will be used by merchant to uniquely identify the user’s wallet account.
          minLength: 1
          maxLength: 256
          example: '2832020930293'
        maskedUserLogin:
          type: string
          description: Masked user login name associated with the partner system. For phone number, mask everything except the last 4 digits. e.g "140812346279" will be "\*\*\*\*\*\*\*6279". For email, mask everything except first 3 characters and first 3 characters after @. e.g "jameschu@apple.com"  will be "jam\*\*\*\*\*\@app\*\*\*\*". If character number before @ is less than 4, mask the last character before @.  e.g "xyz@gmail.com" will be "xy\*\@gma\*\*\*\*\*".
          minLength: 1
          maxLength: 256
          x-masklog: FULL
          example: '******6279'
    AccountUnlinkRequest:
      type: object
      description: The specific details of the Wallet link account.
      required:
        - merchantId
        - accountLinkId
      properties:
        merchantId:
          type: string
          description: Unique ID generated by Apple to identify the corresponding Apple merchant. Due to different line of business and subsidiaries within Apple Inc, there may be different merchant IDs that Apple payment system will send to our wallet partners.  Wallet partner should be able to group the transactions with the same merchantID in the same settlement file and generate separate settlement files for different merchant IDs. Please refer to the settlement file specification for more detail information regarding how merchantID is being indicated in the settlement file.
          minLength: 1
          maxLength: 256
          example: abcdefg
        countryCode:
          $ref: '#/components/schemas/CountryCodeFormat'
        walletName:
          type: string
          description: This value identifies the name of the wallet and it will be a fixed value assigned by Apple to each wallet partner.
          minLength: 1
          maxLength: 40
        accountLinkId:
          type: string
          description: Unique ID generated on the merchant side to identify this specific linking between an Apple account and a wallet account. It is used for idempotency enforcement.
          minLength: 1
          maxLength: 256
          example: 1610651130445u1700942051
    AccountUnlinkResponse:
      type: object
      required:
        - responseCode
      description: Wallet account information in the response message.
      properties:
        responseCode:
          $ref: '#/components/schemas/AccountUnlinkResponseCode'
        responseCodeMessage:
          type: string
          description: This field is populated by wallet partner to provide partner specific information for the response.
          minLength: 1
          maxLength: 100
          example: a description about the response
    ChallengeInitiateRequest:
      type: object
      description: The request object for challenge initiate operation. This api does not have idempotency requirement.
      required:
        - merchantId
        - chargeToken
      properties:
        merchantId:
          type: string
          description: Unique ID generated by Apple to identify the corresponding Apple merchant. Due to different line of business and subsidiaries within Apple Inc, there may be different merchant IDs that Apple payment system will send to our wallet partners.  Wallet partner should be able to group the transactions with the same merchantID in the same settlement file and generate separate settlement files for different merchant IDs. Please refer to the settlement file specification for more detail information regarding how merchantID is being indicated in the settlement file.
          minLength: 1
          maxLength: 256
          example: abcdefg
        countryCode:
          $ref: '#/components/schemas/CountryCodeFormat'
        walletName:
          type: string
          description: This value identifies the name of the wallet and it will be a fixed value assigned by Apple to each wallet partner.
          minLength: 1
          maxLength: 40
        chargeToken:
          type: string
          description: Charge token generated by the wallet partner as a result of the binding process.
          minLength: 1
          maxLength: 256
          example: '123456789'
    ChallengeInitiateResponse:
      type: object
      required:
        - responseCode
      description: Wallet account information in the response message
      properties:
        responseCode:
          $ref: '#/components/schemas/ChallengeInitiateResponseCode'
        responseCodeMessage:
          type: string
          description: This field is populated by wallet partner to provide partner specific information for the response.
          minLength: 1
          maxLength: 100
          example: a description about the response
        challengeToken:
          type: string
          description: The token associated with the challenge request. The token need to be passed in the Challege Verify Api.
          minLength: 1
          maxLength: 128
        destinationAddress:
          type: string
          description: The destination(e.g phone number) where the challenge code was sent to. For phone number, mask everything except the last 4 digits. e.g "140812346279" will be "\*\*\*\*\*\*\*6279". For email, mask everything except first 3 characters and first 3 characters after @. e.g "jameschu@apple.com"  will be "jam\*\*\*\*\*\@app\*\*\*\*". If character number before @ is less than 4, mask the last character before @.  e.g "xyz@gmail.com" will be "xy\*\@gma\*\*\*\*\*".
          minLength: 1
          maxLength: 40
    ChallengeVerifyRequest:
      type: object
      description: The request object for challenge verify operation.
      required:
        - merchantId
        - challengeToken
        - challengeCode
      properties:
        merchantId:
          type: string
          description: Unique ID generated by Apple to identify the corresponding Apple merchant. Due to different line of business and subsidiaries within Apple Inc, there may be different merchant IDs that Apple payment system will send to our wallet partners.  Wallet partner should be able to group the transactions with the same merchantID in the same settlement file and generate separate settlement files for different merchant IDs. Please refer to the settlement file specification for more detail information regarding how merchantID is being indicated in the settlement file.
          maxLength: 256
          example: abcdefg
        countryCode:
          $ref: '#/components/schemas/CountryCodeFormat'
        challengeToken:
          type: string
          description: The challenge token returned in the challenge initiate API. It is used for idempotency enforcement.
          minLength: 1
          maxLength: 256
          example: 1610651130445u1700942051
        challengeCode:
          type: string
          description: Verificaton pin provide by user.
          minLength: 1
          maxLength: 24
          example: '123456'
    ChallengeVerifyResponse:
      type: object
      required:
        - responseCode
      description: Wallet account information in the response message.
      properties:
        responseCode:
          $ref: '#/components/schemas/ChallengeVerifyResponseCode'
        responseCodeMessage:
          type: string
          description: This field is populated by wallet partner to provide partner specific information for the response.
          minLength: 1
          maxLength: 100
          example: a description about the response
    ChargeRequest:
      type: object
      description: Wallet charge request.
      required:
        - merchantId
        - currencyCode
        - amount
        - chargeToken
        - transactionId
      properties:
        merchantId:
          type: string
          description: Unique ID generated by Apple to identify the corresponding Apple merchant. Due to different line of business and subsidiaries within Apple Inc, there may be different merchant IDs that Apple payment system will send to our wallet partners.  Wallet partner should be able to group the transactions with the same merchantID in the same settlement file and generate separate settlement files for different merchant IDs. Please refer to the settlement file specification for more detail information regarding how merchantID is being indicated in the settlement file.
          minLength: 1
          maxLength: 256
          example: abcdefg
        walletName:
          type: string
          description: This value identifies the name of the wallet and it will be a fixed value assigned by Apple to each wallet partner.
          minLength: 1
          maxLength: 40
        countryCode:
          $ref: '#/components/schemas/CountryCodeFormat'
        currencyCode:
          $ref: '#/components/schemas/CurrencyCodeFormat'
        amount:
          type: integer
          format: int64
          description: Amount expressed in minor denomination of the presentment currency, inclusive of any & all taxes and fees.
          minimum: 0
          maximum: 999999999999
          exclusiveMinimum: false
        chargeToken:
          type: string
          description: Charge token generated by the wallet partner as a result of the account link process.
          minLength: 1
          maxLength: 256
          example: '123456789'
        transactionId:
          type: string
          description: Unique identifier generated by the merchant for this charge transaction. This transactionId plays a critical role in the idempotency enforcement. Please refer to the section ‘Idempotency Enforcement’ to understand how this transaction ID should be used in the idempotency check process.
          minLength: 1
          maxLength: 40
        orderNumber:
          type: string
          description: Order number for the charge transaction.
          minLength: 1
          maxLength: 40
        description:
          type: string
          description: Description for the order.
          minLength: 1
          maxLength: 100
    ChargeResponse:
      type: object
      description: Response for the Charge transaction.
      required:
        - responseCode
      properties:
        responseCode:
          $ref: '#/components/schemas/ChargeResponseCode'
        responseCodeMessage:
          type: string
          description: This field is populated by wallet partner to provide partner specific information for the response.
          minLength: 1
          maxLength: 100
          example: a description about the response.
        amount:
          type: integer
          format: int64
          description: 'The amount approved in the minor denomination of the presentment currency. Note that the presence or absence of the amount is NOT to be used as a surrogate indication of approval or decline: only the responseCode is authoritative in this respect.'
          minimum: 0
          maximum: 999999999999
          exclusiveMinimum: false
        partnerTransactionId:
          type: string
          description: The transacton Id generated by the partner which specific to the Charge transaction.
          minLength: 1
          maxLength: 40
          example: abc123456789
        partnerSolutionUrl:
          type: string
          description: External partner url to help user resolve processing issue..
          minLength: 1
          maxLength: 256
          example: https://solutionurl.partner.com
    SingleChargeRequest:
      type: object
      description: One-time payment single charge request.
      required:
        - merchantId
        - transactionId
        - amount
        - currencyCode
        - countryCode
        - walletName
        - orderNumber
        - paymentExpiryTime
        - terminalType
      properties:
        merchantId:
          type: string
          description: Unique ID generated by Apple to identify the corresponding Apple merchant. Due to different line of business and subsidiaries within Apple Inc, there may be different merchant IDs that Apple payment system will send to our wallet partners.  Wallet partner should be able to group the transactions with the same merchantID in the same settlement file and generate separate settlement files for different merchant IDs. Please refer to the settlement file specification for more detail information regarding how merchantID is being indicated in the settlement file.
          minLength: 1
          maxLength: 256
          example: abcdefg
        transactionId:
          type: string
          description: Unique identifier generated by the merchant for this single charge transaction. This transactionId plays a critical role in the idempotency enforcement. Please refer to the section ‘Idempotency Enforcement’ to understand how this transaction ID should be used in the idempotency check process.
          minLength: 1
          maxLength: 40
        amount:
          type: integer
          format: int64
          description: Amount expressed in minor denomination of the presentment currency, inclusive of any & all taxes and fees.
          minimum: 0
          maximum: 999999999999
          exclusiveMinimum: false
        currencyCode:
          $ref: '#/components/schemas/CurrencyCodeFormat'
        countryCode:
          $ref: '#/components/schemas/CountryCodeFormat'
        walletName:
          type: string
          description: This value identifies the name of the wallet and it will be a fixed value assigned by Apple to each wallet partner.
          minLength: 1
          maxLength: 40
        storeId:
          type: string
          description: Unique identifier generated by the merchant to represent the store where the transaction is associated with.
        orderNumber:
          type: string
          description: Order number of the charge transaction.
          minLength: 1
          maxLength: 40
        description:
          type: string
          description: Description for the order.
          minLength: 1
          maxLength: 100
        merchantReturnURL:
          type: string
          description: URL that payment partner should redirect to after user starts the one-time payment process and finishes the required payment steps on the payment partner's web page or mobile app or user decides not to proceed.
          minLength: 1
          maxLength: 1024
          example: https://abc
        transactionNotifyURL:
          type: string
          description: URL that is used to receive the transaction notification.
          minLength: 1
          maxLength: 1024
          example: https://abc/notify
        paymentExpiryTime:
          type: string
          format: date-time
          description: |
            The date and time of the payment session expiration time in GMT.
            Should be provided if known, and expressed in one of two ISO8601 formats:
            - `YYYY-MM-DDThh:mm:sstzd  ` (e.g. `2024-02-29T08:05:09Z`)
            - `YYYY-MM-DDThh:mm:ss.stzd` (e.g. `2024-02-29T19:56:10.123+05:30`)

            where:
            ```
                YYYY = four-digit year
                MM   = two-digit month (01=January, etc.)
                DD   = two-digit day of month (01 through 31)
                T    = ISO8601 separator for date and time portions
                hh   = two digits of hour (00 through 23) (am/pm NOT allowed)
                mm   = two digits of minute (00 through 59)
                ss   = two digits of second (00 through 59)
                .s   = one or more digits representing a decimal fraction of a second (optional)
                tzd  = time zone designator (+hh:mm or -hh:mm, or Z for UTC) i.e. the offset from UTC
             ```
        appInstalled:
          type: boolean
          description: Whether the user has the wallet mobile App installed on the device that one-time payment is initiating on.
          example: true
        appVersion:
          type: string
          description: If appInstalled is true, the version of the App is indicated here.
          minLength: 1
          maxLength: 64
          example: 10.2.13.9000
        terminalType:
          type: string
          description: The terminal type of which the merchant service applies to.
          x-nullable: true
          enum:
            - DESKTOP_BROWSER
            - MOBILE_BROWSER
            - MOBILE_APP
            - MOBILE_MINIAPP
    SingleChargeResponse:
      type: object
      description: Response for the Single Charge operation.
      required:
        - responseCode
      properties:
        responseCode:
          $ref: '#/components/schemas/SingleChargeResponseCode'
        responseCodeMessage:
          type: string
          description: This field is populated by wallet partner to provide partner specific information for the response.
        amount:
          type: integer
          format: int64
          description: The payment amount requested.
          minimum: 0
          maximum: 999999999999
          exclusiveMinimum: false
        currencyCode:
          $ref: '#/components/schemas/CurrencyCodeFormat'
        partnerTransactionId:
          type: string
          description: The transacton Id generated by payment partner which is specific to the Charge transaction.
          minLength: 1
          maxLength: 40
          example: abc123456789
        redirectURL:
          type: string
          description: URL used to redirect the customer to start the one-time payment transaction.
          minLength: 1
          maxLength: 1024
    QueryTransactionRequest:
      type: object
      description: Query the transaction status.
      required:
        - merchantId
        - transactionId
        - originalTransactionId
      properties:
        merchantId:
          type: string
          description: Unique ID generated by Apple to identify the corresponding Apple merchant. Due to different line of business and subsidiaries within Apple Inc, there may be different merchant IDs that Apple payment system will send to our wallet partners.  Wallet partner should be able to group the transactions with the same merchantID in the same settlement file and generate separate settlement files for different merchant IDs. Please refer to the settlement file specification for more detail information regarding how merchantID is being indicated in the settlement file.
          minLength: 1
          maxLength: 256
          example: abcdefg
        transactionId:
          type: string
          description: Unique identifier generated by the merchant for this query transaction. This transactionId plays a critical role in the idempotency enforcement.  Please refer to the section ‘Idempotency Enforcement’ to understand how this transaction ID should be used in the idempotency check process.
          minLength: 1
          maxLength: 40
        originalTransactionId:
          type: string
          description: The original transaction id of the transaction which is queired about.
          minLength: 1
          maxLength: 40
        countryCode:
          $ref: '#/components/schemas/CountryCodeFormat'
    QueryTransactionResponse:
      type: object
      description: Response for the Query Transaction operation.
      required:
        - responseCode
      properties:
        responseCode:
          $ref: '#/components/schemas/QueryTransactionResponseCode'
        responseCodeMessage:
          type: string
          description: This field is populated by wallet partner to provide partner specific information for the response.
        originalTransactionResponseCode:
          $ref: '#/components/schemas/QueryOriginalTransactionResponseCode'
        merchantId:
          type: string
          description: Unique ID generated by Apple to identify the corresponding Apple merchant. Due to different line of business and subsidiaries within Apple Inc, there may be different merchant IDs that Apple payment system will send to our wallet partners.  Wallet partner should be able to group the transactions with the same merchantID in the same settlement file and generate separate settlement files for different merchant IDs. Please refer to the settlement file specification for more detail information regarding how merchantID is being indicated in the settlement file.
          minLength: 1
          maxLength: 256
          example: a merchantId string
        partnerTransactionId:
          type: string
          description: The transaction Id generated by payment partner which is specific to the Charge transaction.
          minLength: 1
          maxLength: 40
          example: abc123456789
        userAccountId:
          type: string
          description: Unique user account ID from the wallet partner system. For PII purpose, wallet partner can provide a hashed or encrypted user account ID. This ID will be used by merchant to uniquely identify the user’s wallet account.
          minLength: 1
          maxLength: 256
          example: '2832020930293'
        amount:
          type: integer
          format: int64
          description: The transaction amount in the minor denomination of the presentment currency.
          minimum: 0
          maximum: 999999999999
          exclusiveMinimum: false
        paymentDateTime:
          type: string
          format: date-time
          description: |
            The date and time that the payment reaches a final state of success or failure.
            Note: This field is returned only when the payment reaches a final state of success or failure.
            Should be provided if known, and expressed in one of two ISO8601 formats:
            - `YYYY-MM-DDThh:mm:sstzd  ` (e.g. `2024-02-29T08:05:09Z`)
            - `YYYY-MM-DDThh:mm:ss.stzd` (e.g. `2024-02-29T19:56:10.123+05:30`)

            where:
            ```
                YYYY = four-digit year
                MM   = two-digit month (01=January, etc.)
                DD   = two-digit day of month (01 through 31)
                T    = ISO8601 separator for date and time portions
                hh   = two digits of hour (00 through 23) (am/pm NOT allowed)
                mm   = two digits of minute (00 through 59)
                ss   = two digits of second (00 through 59)
                .s   = one or more digits representing a decimal fraction of a second (optional)
                tzd  = time zone designator (+hh:mm or -hh:mm, or Z for UTC) i.e. the offset from UTC
             ```
        currencyCode:
          $ref: '#/components/schemas/CurrencyCodeFormat'
    ReversalRequest:
      type: object
      x-json-ignore-properties: true
      required:
        - merchantId
        - originalTransactionId
        - transactionId
      properties:
        merchantId:
          type: string
          description: Unique ID generated by Apple to identify the corresponding Apple merchant. Due to different line of business and subsidiaries within Apple Inc, there may be different merchant IDs that Apple payment system will send to our wallet partners.  Wallet partner should be able to group the transactions with the same merchantID in the same settlement file and generate separate settlement files for different merchant IDs. Please refer to the settlement file specification for more detail information regarding how merchantID is being indicated in the settlement file.
          minLength: 1
          maxLength: 256
          example: abcdefg
        countryCode:
          $ref: '#/components/schemas/CountryCodeFormat'
        originalTransactionId:
          type: string
          description: The original transaction id of the previous charge transaction.
          minLength: 1
          maxLength: 40
          example: testtransactionid01
        transactionId:
          type: string
          description: Unique identifier generated by the merchant for this reversal transaction. This transactionId plays a critical role in the idempotency enforcement.  Please refer to the section ‘Idempotency Enforcement’ to understand how this transaction ID should be used in the idempotency check process.
          minLength: 1
          maxLength: 40
    ReversalResponse:
      type: object
      required:
        - responseCode
      properties:
        responseCode:
          $ref: '#/components/schemas/ReversalResponseCode'
        responseCodeMessage:
          type: string
          description: This field is populated by wallet partner to provide partner specific information for the response.
          minLength: 1
          maxLength: 100
          example: a description about the response
        partnerTransactionId:
          type: string
          description: The transacton Id generated by the partner which associated to the reversal transaction.
          minLength: 1
          maxLength: 40
          example: abc123456789
    RefundRequest:
      type: object
      x-json-ignore-properties: true
      required:
        - merchantId
        - originalTransactionId
        - transactionId
        - amount
      properties:
        merchantId:
          type: string
          description: Unique ID generated by Apple to identify the corresponding Apple merchant. Due to different line of business and subsidiaries within Apple Inc, there may be different merchant IDs that Apple payment system will send to our wallet partners.  Wallet partner should be able to group the transactions with the same merchantID in the same settlement file and generate separate settlement files for different merchant IDs. Please refer to the settlement file specification for more detail information regarding how merchantID is being indicated in the settlement file.
          minLength: 1
          maxLength: 256
          example: abcdefg
        countryCode:
          $ref: '#/components/schemas/CountryCodeFormat'
        originalTransactionId:
          type: string
          description: The original transaction id of the previous charge transaction.
          minLength: 1
          maxLength: 40
          example: testtransactionid01
        transactionId:
          type: string
          description: Unique identifier generated by the merchant for this refund transaction. This transactionId plays a critical role in the idempotency enforcement.  Please refer to the section ‘Idempotency Enforcement’ to understand how this transaction ID should be used in the idempotency check process.
          minLength: 1
          maxLength: 40
        amount:
          type: integer
          format: int64
          description: Amount expressed in minor denomination of the presentment currency, inclusive of any & all taxes and fees.
          minimum: 0
          maximum: 999999999999
          exclusiveMinimum: false
    RefundResponse:
      type: object
      required:
        - responseCode
      properties:
        responseCode:
          $ref: '#/components/schemas/RefundResponseCode'
        responseCodeMessage:
          type: string
          description: This field is populated by wallet partner to provide partner specific information for the response.
          minLength: 1
          maxLength: 100
          example: a description about the response
        amount:
          type: integer
          format: int64
          description: 'The amount approved in the minor denomination of the presentment currency. Note that the presence or absence of the amount is NOT to be used as a surrogate indication of approval or decline: only the responseCode is authoritative in this respect.'
          minimum: 0
          maximum: 999999999999
          exclusiveMinimum: false
        partnerTransactionId:
          type: string
          description: The transacton Id generated by the partner which associated to the refund transaction.
          minLength: 1
          maxLength: 40
          example: abc123456789
    NotifyTransactionRequest:
      type: object
      description: Payment partner notifies the transaction status to Apple Payment System.
      required:
        - notificationType
        - merchantId
        - transactionId
        - partnerTransactionId
        - amount
        - currencyCode
        - status
      properties:
        notificationType:
          type: string
          description: Notification type.
          enum:
            - PAYMENT_STATUS
        merchantId:
          type: string
          description: Unique ID generated by Apple to identify the corresponding Apple merchant. Due to different line of business and subsidiaries within Apple Inc, there may be different merchant IDs that Apple payment system will send to our wallet partners.  Wallet partner should be able to group the transactions with the same merchantID in the same settlement file and generate separate settlement files for different merchant IDs. Please refer to the settlement file specification for more detail information regarding how merchantID is being indicated in the settlement file.
          minLength: 1
          maxLength: 256
          example: a merchantId string
        transactionId:
          type: string
          description: Unique identifier generated by the merchant for the charge transaction. This transactionId plays a critical role in the idempotency enforcement.  Please refer to the section ‘Idempotency Enforcement’ to understand how this transaction ID should be used in the idempotency check process.
          minLength: 1
          maxLength: 40
        partnerTransactionId:
          type: string
          description: The transaction Id generated by payment partner which is specific to the Charge transaction.
          minLength: 1
          maxLength: 40
        userAccountId:
          type: string
          description: Unique user account ID from the wallet partner system. For PII purpose, wallet partner can provide a hashed or encrypted user account ID. This ID will be used by merchant to uniquely identify the user’s wallet account.
          maxLength: 256
          example: '2832020930293'
        amount:
          type: integer
          format: int64
          description: The transaction amount in the minor denomination of the presentment currency.
          minimum: 0
          maximum: 999999999999
          exclusiveMinimum: false
        currencyCode:
          $ref: '#/components/schemas/CurrencyCodeFormat'
        paymentDateTime:
          type: string
          format: date-time
          description: |
            The date and time that the payment reaches a final state of success or failure.
            Note: This field is returned only when the payment reaches a final state of success or failure.
            Should be provided if known, and expressed in one of two ISO8601 formats:
            - `YYYY-MM-DDThh:mm:sstzd  ` (e.g. `2024-02-29T08:05:09Z`)
            - `YYYY-MM-DDThh:mm:ss.stzd` (e.g. `2024-02-29T19:56:10.123+05:30`)

            where:
            ```
                YYYY = four-digit year
                MM   = two-digit month (01=January, etc.)
                DD   = two-digit day of month (01 through 31)
                T    = ISO8601 separator for date and time portions
                hh   = two digits of hour (00 through 23) (am/pm NOT allowed)
                mm   = two digits of minute (00 through 59)
                ss   = two digits of second (00 through 59)
                .s   = one or more digits representing a decimal fraction of a second (optional)
                tzd  = time zone designator (+hh:mm or -hh:mm, or Z for UTC) i.e. the offset from UTC
             ```
        status:
          $ref: '#/components/schemas/NotifyTransactionStatusCode'
    NotifyTransactionResponse:
      type: object
      description: Apple's Response for the inbound notification sent from payment partner.
      required:
        - responseCode
      properties:
        responseCode:
          $ref: '#/components/schemas/NotifyTransactionResponseCode'
        responseCodeMessage:
          type: string
          description: This field is populated by Apple to provide partner specific information for the response.
    CancelSingleChargeRequest:
      type: object
      x-json-ignore-properties: true
      required:
        - merchantId
        - originalTransactionId
        - transactionId
      properties:
        merchantId:
          type: string
          description: Unique ID generated by Apple to identify the corresponding Apple merchant. Due to different line of business and subsidiaries within Apple Inc, there may be different merchant IDs that Apple payment system will send to our wallet partners.  Wallet partner should be able to group the transactions with the same merchantID in the same settlement file and generate separate settlement files for different merchant IDs. Please refer to the settlement file specification for more detail information regarding how merchantID is being indicated in the settlement file.
          minLength: 1
          maxLength: 256
          example: abcdefg
        countryCode:
          $ref: '#/components/schemas/CountryCodeFormat'
        originalTransactionId:
          type: string
          description: The transaction id of the Single Charge transaction being canceled.
          minLength: 1
          maxLength: 40
          example: testchargetransactionid01
        transactionId:
          type: string
          description: The transaction id of  this cancel transaction.
          minLength: 1
          maxLength: 40
          example: testcanceltransactionid01
    CancelSingleChargeResponse:
      type: object
      required:
        - responseCode
      properties:
        responseCode:
          $ref: '#/components/schemas/CancelSingleChargeResponseCode'
        responseCodeMessage:
          type: string
          description: This field is populated by wallet partner to provide partner specific information for the response.
          minLength: 1
          maxLength: 100
          example: a description about the response
        partnerTransactionId:
          type: string
          description: The transacton Id generated by the partner which associated to the cancel transaction.
          minLength: 1
          maxLength: 40
          example: abc123456789
    CountryCodeFormat:
      type: string
      description: Country (ISO3166 3-alphabetic)
      enum:
        - AFG
        - ALA
        - ALB
        - DZA
        - ASM
        - AND
        - AGO
        - AIA
        - ATG
        - ARG
        - ARM
        - ABW
        - AUS
        - AUT
        - AZE
        - BHR
        - BGD
        - BRB
        - BLR
        - BEL
        - BLZ
        - BEN
        - BMU
        - BTN
        - BOL
        - BES
        - BIH
        - BWA
        - BRA
        - VGB
        - BRN
        - BGR
        - BFA
        - BDI
        - KHM
        - CMR
        - CAN
        - CPV
        - CYM
        - CAF
        - TCD
        - CHL
        - CXR
        - CCK
        - COL
        - COM
        - COD
        - COK
        - CRI
        - CIV
        - HRV
        - CUB
        - CUW
        - CZE
        - COG
        - DNK
        - DJI
        - DMA
        - DOM
        - TLS
        - ECU
        - EGY
        - SLV
        - GNQ
        - ERI
        - EST
        - ETH
        - FLK
        - FRO
        - FJI
        - FIN
        - FRA
        - GUF
        - PYF
        - GAB
        - GMB
        - GEO
        - DEU
        - GHA
        - GIB
        - GRC
        - GRL
        - GRD
        - GLP
        - GUM
        - GTM
        - GGY
        - GIN
        - GNB
        - GUY
        - HTI
        - HND
        - HKG
        - HUN
        - ISL
        - IND
        - IDN
        - IRN
        - IRQ
        - IRL
        - IMN
        - ISR
        - ITA
        - JAM
        - JPN
        - JEY
        - JOR
        - KAZ
        - KEN
        - KIR
        - XKS
        - KWT
        - KGZ
        - LAO
        - LVA
        - LBN
        - LSO
        - LBR
        - LBY
        - LIE
        - LTU
        - LUX
        - MAC
        - MDG
        - MWI
        - MYS
        - MDV
        - MLI
        - MLT
        - MHL
        - MTQ
        - MRT
        - MUS
        - MYT
        - MEX
        - FSM
        - MDA
        - MCO
        - MNG
        - MNE
        - MSR
        - MAR
        - MOZ
        - MMR
        - NAM
        - NRU
        - NPL
        - NLD
        - ANT
        - NCL
        - NZL
        - NIC
        - NER
        - NGA
        - NIU
        - NFK
        - PRK
        - MKD
        - CYP
        - MNP
        - NOR
        - OMN
        - PAK
        - PLW
        - PSE
        - PAN
        - PNG
        - PRY
        - CHN
        - PER
        - PHL
        - PCN
        - POL
        - PRT
        - PRI
        - QAT
        - REU
        - ROU
        - RUS
        - RWA
        - SXM
        - MAF
        - SHN
        - KNA
        - LCA
        - SPM
        - VCT
        - WSM
        - SMR
        - STP
        - SAU
        - SEN
        - SRB
        - SYC
        - SLE
        - SGP
        - SVK
        - SVN
        - SLB
        - SOM
        - ZAF
        - KOR
        - SSD
        - ESP
        - LKA
        - SDN
        - SUR
        - SJM
        - SWZ
        - SWE
        - CHE
        - SYR
        - TWN
        - TJK
        - TZA
        - THA
        - BHS
        - TGO
        - TKL
        - TON
        - TTO
        - TUN
        - TUR
        - TKM
        - TCA
        - TUV
        - UGA
        - UKR
        - QZZ
        - ARE
        - GBR
        - USA
        - URY
        - VIR
        - UZB
        - VUT
        - VAT
        - VEN
        - VNM
        - WLF
        - YEM
        - ZMB
        - ZWE
        - ZZZ
    CurrencyCodeFormat:
      type: string
      nullable: true
      description: Transaction presentment currency (ISO4217  3-alpha).
      enum:
        - AED
        - AFN
        - ALL
        - AMD
        - ANG
        - AOA
        - ARS
        - AUD
        - AWG
        - AZN
        - BAM
        - BBD
        - BDT
        - BGN
        - BHD
        - BIF
        - BMD
        - BND
        - BOB
        - BOV
        - BRL
        - BSD
        - BTN
        - BWP
        - BYN
        - BZD
        - CAD
        - CDF
        - CHE
        - CHF
        - CHW
        - CLF
        - CLP
        - CNY
        - COP
        - CRC
        - CUC
        - CUP
        - CVE
        - CZK
        - DJF
        - DKK
        - DOP
        - DZD
        - EGP
        - ERN
        - ETB
        - EUR
        - FJD
        - FKP
        - GBP
        - GEL
        - GHS
        - GIP
        - GMD
        - GNF
        - GTQ
        - GYD
        - HKD
        - HNL
        - HRK
        - HTG
        - HUF
        - IDR
        - ILS
        - INR
        - IQD
        - IRR
        - ISK
        - JMD
        - JOD
        - JPY
        - KES
        - KGS
        - KHR
        - KMF
        - KPW
        - KRW
        - KWD
        - KYD
        - KZT
        - LAK
        - LBP
        - LKR
        - LRD
        - LSL
        - LTL
        - LVL
        - LYD
        - MAD
        - MDL
        - MGA
        - MKD
        - MMK
        - MNT
        - MOP
        - MRO
        - MUR
        - MVR
        - MWK
        - MXN
        - MXV
        - MYR
        - MZN
        - NAD
        - NGN
        - NIO
        - NOK
        - NPR
        - NZD
        - OMR
        - PAB
        - PEN
        - PGK
        - PHP
        - PKR
        - PLN
        - PYG
        - QAR
        - RON
        - RSD
        - RUB
        - RWF
        - SAR
        - SBD
        - SCR
        - SDG
        - SEK
        - SGD
        - SHP
        - SLL
        - SOS
        - SRD
        - SSP
        - STD
        - SYP
        - SZL
        - THB
        - TJS
        - TMT
        - TND
        - TOP
        - TRY
        - TTD
        - TWD
        - TZS
        - UAH
        - UGX
        - USD
        - USN
        - USS
        - UYI
        - UYU
        - UZS
        - VEF
        - VND
        - VUV
        - WST
        - XAF
        - XCD
        - XOF
        - XPF
        - YER
        - ZAR
        - ZMW
    AccountInitiateLinkResponseCode:
      type: string
      description: Human-readable  Response Code.
      x-nullable: true
      enum:
        - APPROVED
        - DECLINED_GENERAL
        - DECLINED_UNAUTHORIZED_OPERATION
        - DECLINED_SUSPECTED_FRAUD
        - ERROR_INVALID_REQUEST
        - ERROR_INTERNAL_ERROR
        - ERROR_DOWNSTREAM_ERROR
        - ERROR_DOWNSTREAM_TIMEOUT
        - ERROR_AUTHENTICATION_FAILURE
    AccountQueryResponseCode:
      type: string
      description: Human-readable  Response Code.
      x-nullable: true
      enum:
        - APPROVED
        - DECLINED_ACCOUNT_CLOSED
        - DECLINED_GENERAL
        - DECLINED_ACCOUNT_NOT_FOUND
        - DECLINED_UNAUTHORIZED_OPERATION
        - DECLINED_SUSPECTED_FRAUD
        - ERROR_INVALID_REQUEST
        - ERROR_INTERNAL_ERROR
        - ERROR_DOWNSTREAM_ERROR
        - ERROR_DOWNSTREAM_TIMEOUT
        - ERROR_AUTHENTICATION_FAILURE
    AccountLinkResponseCode:
      type: string
      description: Human-readable  Response Code.
      x-nullable: true
      enum:
        - APPROVED
        - DECLINED_ACCOUNT_CLOSED
        - DECLINED_GENERAL
        - DECLINED_ACCOUNT_NOT_FOUND
        - DECLINED_UNAUTHORIZED_OPERATION
        - DECLINED_SUSPECTED_FRAUD
        - ERROR_INVALID_REQUEST
        - ERROR_INTERNAL_ERROR
        - ERROR_DOWNSTREAM_ERROR
        - ERROR_DOWNSTREAM_TIMEOUT
        - ERROR_AUTHENTICATION_FAILURE
    AccountUnlinkResponseCode:
      type: string
      description: Human-readable  Response Code.
      x-nullable: true
      enum:
        - APPROVED
        - DECLINED_ACCOUNT_CLOSED
        - DECLINED_GENERAL
        - DECLINED_ACCOUNT_NOT_FOUND
        - DECLINED_UNAUTHORIZED_OPERATION
        - DECLINED_SUSPECTED_FRAUD
        - ERROR_INVALID_REQUEST
        - ERROR_INTERNAL_ERROR
        - ERROR_DOWNSTREAM_ERROR
        - ERROR_DOWNSTREAM_TIMEOUT
        - ERROR_AUTHENTICATION_FAILURE
    ChargeResponseCode:
      type: string
      description: Human-readable  Response Code.
      x-nullable: true
      enum:
        - APPROVED
        - DECLINED_ACCOUNT_CLOSED
        - DECLINED_AMOUNT_EXCEEDED_UPPER_LIMIT
        - DECLINED_AMOUNT_BELOW_MINIMUM_LIMIT
        - DECLINED_GENERAL
        - DECLINED_INSUFFICIENT_FUNDS
        - DECLINED_INVALID_TOKEN
        - DECLINED_NO_FUNDING_SOURCE
        - DECLINED_NONKYC_AMOUNT_LIMIT_EXCEEDED
        - DECLINED_UNAUTHORIZED_OPERATION
        - DECLINED_SUSPECTED_FRAUD
        - ERROR_INVALID_REQUEST
        - ERROR_DUPLICATE_REQUEST_INCONSISTENT
        - ERROR_INTERNAL_ERROR
        - ERROR_DOWNSTREAM_ERROR
        - ERROR_DOWNSTREAM_TIMEOUT
        - ERROR_AUTHENTICATION_FAILURE
    SingleChargeResponseCode:
      type: string
      description: |
        The single charge transaction response code returned by the payment partner.
        - APPROVED: Single charge call was a success.
        - DECLINED_GENERAL: Declined due to general reasons other than the specific decline error codes provided.
        - DECLINED_AMOUNT_EXCEEDED_UPPER_LIMIT: The payment amount exceeds the limit at wallet level or account level.
        - DECLINED_AMOUNT_BELOW_MINIMUM_LIMIT: The payment amount is below minimun limit.
        - DECLINED_UNAUTHORIZED_OPERATION: Transaction was declined due to unauthorized operation.
        - DECLINED_SUSPECTED_FRAUD: Transaction was declined due to suspected fraud activities.
        - DECLINED_ORDER_ALREADY_PAID: Transaction was paid already.
        - ERROR_INVALID_REQUEST: Invalid request. e.g. Invalid currency, invalid client etc.
        - ERROR_INTERNAL_ERROR: Partner internal error.(Retriable)
        - ERROR_DOWNSTREAM_ERROR: Partner downstream error.(Retriable)
        - ERROR_DOWNSTREAM_TIMEOUT: Partner downstream timeout.(Retriable)
        - ERROR_AUTHENTICATION_FAILURE: Authentication failed.
        - ERROR_DUPLICATE_REQUEST_INCONSISTENT: Duplicated requests are inconsistent.
      x-nullable: true
      enum:
        - APPROVED
        - DECLINED_GENERAL
        - DECLINED_AMOUNT_EXCEEDED_UPPER_LIMIT
        - DECLINED_AMOUNT_BELOW_MINIMUM_LIMIT
        - DECLINED_UNAUTHORIZED_OPERATION
        - DECLINED_SUSPECTED_FRAUD
        - DECLINED_ORDER_ALREADY_PAID
        - ERROR_DUPLICATE_REQUEST_INCONSISTENT
        - ERROR_INVALID_REQUEST
        - ERROR_INTERNAL_ERROR
        - ERROR_DOWNSTREAM_ERROR
        - ERROR_DOWNSTREAM_TIMEOUT
        - ERROR_AUTHENTICATION_FAILURE
    QueryTransactionResponseCode:
      type: string
      description: |
        The query transaction response code returned by the payment partner.
        - APPROVED: The transaction was successfully queried.
        - ERROR_TRANSACTION_ID_NOT_EXIST: The originalTransactionId does not exist.
        - ERROR_INVALID_REQUEST: Invalid request.
        - ERROR_INTERNAL_ERROR: Partner internal error.(Retriable)
        - ERROR_DOWNSTREAM_ERROR: Partner downstream error.(Retriable)
        - ERROR_DOWNSTREAM_TIMEOUT: Partner downstream timeout.(Retriable)
        - ERROR_AUTHENTICATION_FAILURE: Authentication failed.
      x-nullable: true
      enum:
        - APPROVED
        - ERROR_TRANSACTION_ID_NOT_EXIST
        - ERROR_INVALID_REQUEST
        - ERROR_INTERNAL_ERROR
        - ERROR_DOWNSTREAM_ERROR
        - ERROR_DOWNSTREAM_TIMEOUT
        - ERROR_AUTHENTICATION_FAILURE
    QueryOriginalTransactionResponseCode:
      type: string
      description: |
        The current status of the queried transaction.
        - APPROVED: The queried transaction was processed successfully.
        - PENDING: The queried transaction is still pending.
        - CANCELLED: The queried transaction was cancelled.
        - DECLINED_GENERAL: The queried transaction was declined.
        - DECLINED_AMOUNT_BELOW_MINIMUM_LIMIT : The queried transaction was declined because the payment amount is below minimum limit at wallet level or account level.
        - DECLINED_AMOUNT_EXCEEDED_UPPER_LIMIT: The queried transaction was declined due to the payment amount exceeding the limit at wallet level or account level.
        - DECLINED_UNAUTHORIZED_OPERATION: The queried transaction was declined due to unauthorized operation.
        - DECLINED_SUSPECTED_FRAUD: The queried transaction was declined due to suspected fraud activities.
        - DECLINED_PAYMENT_WINDOW_EXPIRED: The queried transaction was declined because payment window expired.
        - DECLINED_NONKYC_AMOUNT_LIMIT_EXCEEDED: The queried transaction was declined because the payment amount exceeds the limit for NONKYC customer.
        - ERROR_INVALID_REQUEST: Invalid request.
        - ERROR_INTERNAL_ERROR: Partner internal error.
        - ERROR_DOWNSTREAM_ERROR: Partner downstream error.
        - ERROR_DOWNSTREAM_TIMEOUT: Partner downstream timeout.
        - REFUNDED: The queried transaction was refunded. (Optional)
        - PARTIALREFUNDED: The queried transaction was partially refunded. (Optional)
      enum:
        - APPROVED
        - PENDING
        - CANCELLED
        - DECLINED_GENERAL
        - DECLINED_AMOUNT_EXCEEDED_UPPER_LIMIT
        - DECLINED_AMOUNT_BELOW_MINIMUM_LIMIT
        - DECLINED_UNAUTHORIZED_OPERATION
        - DECLINED_SUSPECTED_FRAUD
        - DECLINED_PAYMENT_WINDOW_EXPIRED
        - DECLINED_NONKYC_AMOUNT_LIMIT_EXCEEDED
        - ERROR_INVALID_REQUEST
        - ERROR_INTERNAL_ERROR
        - ERROR_DOWNSTREAM_ERROR
        - ERROR_DOWNSTREAM_TIMEOUT
        - REFUNDED
        - PARTIALREFUNDED
    ReversalResponseCode:
      type: string
      description: Human-readable  Response Code.
      x-nullable: true
      enum:
        - APPROVED
        - DECLINED_ACCOUNT_CLOSED
        - DECLINED_GENERAL
        - DECLINED_UNAUTHORIZED_OPERATION
        - DECLINED_ORIGINAL_TRANSACTION_NOT_EXIST
        - DECLINED_TIME_EXCEEDED
        - DECLINED_ORIGINAL_TRANSACTION_INPROGRESS
        - DECLINED_SUSPECTED_FRAUD
        - ERROR_ALREADY_REVERSED
        - ERROR_INVALID_REQUEST
        - ERROR_INTERNAL_ERROR
        - ERROR_DOWNSTREAM_ERROR
        - ERROR_DOWNSTREAM_TIMEOUT
        - ERROR_AUTHENTICATION_FAILURE
    RefundResponseCode:
      type: string
      description: |
        Human-readable refund response code.
        - APPROVED: Refund was approved.
        - DECLINED_GENERAL: Refund was declined due to general reasons.
        - DECLINED_ACCOUNT_CLOSED: Refund was declined because the account is closed.
        - DECLINED_UNAUTHORIZED_OPERATION: Refund was declined due to unauthorized operation.
        - DECLINED_ORIGINAL_TRANSACTION_NOT_EXIST: Refund was declined because original transaction does not exist.
        - DECLINED_AMOUNT_EXCEEDED_UPPER_LIMIT: The refund amount exceeds the limit at wallet level or account level.
        - DECLINED_AMOUNT_BELOW_MINIMUM_LIMIT: The refund amount is below minimum limit at wallet level or account level.
        - DECLINED_TIME_EXCEEDED: Refund was declined due to refund time window exceeded.
        - DECLINED_SUSPECTED_FRAUD: Refund was declined due to suspected fraud activities.
        - DECLINED_ORIGINAL_TRANSACTION_INPROGRESS: Refund was declined because original transaction is in progress.(Retriable)
        - DECLINED_SERVICE_UNAVAILABLE: Refund was declined due to service unavailable.(Retriable)
        - ERROR_INVALID_REQUEST: Invalid request.
        - ERROR_INTERNAL_ERROR: Partner internal error.(Retriable)
        - ERROR_DOWNSTREAM_ERROR: Partner downstream error.(Retriable)
        - ERROR_DOWNSTREAM_TIMEOUT: Partner downstream timeout.(Retriable)
        - ERROR_AUTHENTICATION_FAILURE: Authentication failed.
      x-nullable: true
      enum:
        - APPROVED
        - DECLINED_GENERAL
        - DECLINED_ACCOUNT_CLOSED
        - DECLINED_UNAUTHORIZED_OPERATION
        - DECLINED_ORIGINAL_TRANSACTION_NOT_EXIST
        - DECLINED_AMOUNT_EXCEEDED_UPPER_LIMIT
        - DECLINED_AMOUNT_BELOW_MINIMUM_LIMIT
        - DECLINED_TIME_EXCEEDED
        - DECLINED_SUSPECTED_FRAUD
        - DECLINED_ORIGINAL_TRANSACTION_INPROGRESS
        - DECLINED_SERVICE_UNAVAILABLE
        - ERROR_INVALID_REQUEST
        - ERROR_INTERNAL_ERROR
        - ERROR_DOWNSTREAM_ERROR
        - ERROR_DOWNSTREAM_TIMEOUT
        - ERROR_AUTHENTICATION_FAILURE
    ChallengeInitiateResponseCode:
      type: string
      description: Human-readable  Response Code.
      x-nullable: true
      enum:
        - APPROVED
        - DECLINED_ACCOUNT_CLOSED
        - DECLINED_CHALLENGE_LIMIT_EXCEEDED
        - DECLINED_GENERAL
        - DECLINED_INVALID_PHONE_NUMBER
        - DECLINED_UNAUTHORIZED_OPERATION
        - DECLINED_SUSPECTED_FRAUD
        - ERROR_INVALID_REQUEST
        - ERROR_INTERNAL_ERROR
        - ERROR_DOWNSTREAM_ERROR
        - ERROR_DOWNSTREAM_TIMEOUT
        - ERROR_AUTHENTICATION_FAILURE
    ChallengeVerifyResponseCode:
      type: string
      description: Human-readable  Response Code.
      x-nullable: true
      enum:
        - APPROVED
        - DECLINED_CHALLENGE_LIMIT_EXCEEDED
        - DECLINED_ACCOUNT_CLOSED
        - DECLINED_GENERAL
        - DECLINED_INVALID_CHALLENGE_CODE
        - DECLINED_UNAUTHORIZED_OPERATION
        - DECLINED_CHALLENGE_TRANSACTION_NOT_EXIST
        - DECLINED_SUSPECTED_FRAUD
        - ERROR_INVALID_REQUEST
        - ERROR_INTERNAL_ERROR
        - ERROR_DOWNSTREAM_ERROR
        - ERROR_DOWNSTREAM_TIMEOUT
        - ERROR_AUTHENTICATION_FAILURE
    NotifyTransactionStatusCode:
      type: string
      description: |
        The current status of the transaction notified by the payment partner.
        - APPROVED: Indicates that the notified transaction was processed successfully.
        - CANCELLED: Indicates that the notified transaction was cancelled.
        - DECLINED_GENERAL: Indicates that the notified transaction was declined for general reasons.
        - DECLINED_AMOUNT_BELOW_MINIMUM_LIMIT: Indicates that the notified transaction was declined because the payment amount is below minimum limit at wallet level or account level.
        - DECLINED_AMOUNT_EXCEEDED_UPPER_LIMIT: Indicates that the notified transaction was declined due to the payment amount exceeding the limit at wallet level or account level.
        - DECLINED_SUSPECTED_FRAUD: Indicates that the notified transaction was declined due to suspected fraud activities.
        - DECLINED_PAYMENT_WINDOW_EXPIRED: Indicates that the notified transaction was declined due to payment window expired.
      enum:
        - APPROVED
        - CANCELLED
        - DECLINED_GENERAL
        - DECLINED_AMOUNT_EXCEEDED_UPPER_LIMIT
        - DECLINED_AMOUNT_BELOW_MINIMUM_LIMIT
        - DECLINED_SUSPECTED_FRAUD
        - DECLINED_PAYMENT_WINDOW_EXPIRED
    NotifyTransactionResponseCode:
      type: string
      description: |
        The notification response code returned by Apple Payment System.
        - APPROVED: Indicates that the notification was successfully processed by Apple Payment System.
        - FAILED: Indicates that the notification was not successfully processed by Apple Payment System and payment partner should retry later.
        - ERROR_INVALID_REQUEST: Failed to validate or parse the JWS request or the extracted JSON payload.
        - ERROR_AUTHENTICATION_FAILURE: Failed to verify the JWS signature using partner's public key.
        - ERROR_TRANSACTION_ID_NOT_EXIST: Failed to find the charge transaction associated with transaction id in the request.
      x-nullable: true
      enum:
        - APPROVED
        - FAILED
        - ERROR_INVALID_REQUEST
        - ERROR_AUTHENTICATION_FAILURE
        - ERROR_TRANSACTION_ID_NOT_EXIST
    CancelSingleChargeResponseCode:
      type: string
      description: |
        Human-readable cancel single charge response code.
        - APPROVED: Cancel single charge operation was approved.
        - DECLINED_GENERAL: Declined due to general reasons.
        - DECLINED_ACCOUNT_CLOSED: Declined because the account was closed.
        - DECLINED_UNAUTHORIZED_OPERATION: Declined due to unauthorized operation.
        - DECLINED_ORIGINAL_TRANSACTION_NOT_EXIST: Declined because the original transaction does not exist.
        - DECLINED_PAYMENT_WINDOW_EXPIRED: Declined due to the payment window expired. (Optional)
        - DECLINED_ORIGINAL_TRANSACTION_INPROGRESS: Declined because the original transaction is still in progress.
        - DECLINED_ORIGINAL_TRANSACTION_ALREADY_COMPLETED: Declined because the original transaction was already completed.
        - DECLINED_SUSPECTED_FRAUD: Declined due to suspected fraud activities.
        - ERROR_ALREADY_CANCELED: Single charge already canceled.
        - ERROR_INVALID_REQUEST: Invalid request.
        - ERROR_INTERNAL_ERROR: Partner internal error.(Retriable)
        - ERROR_DOWNSTREAM_ERROR: Partner downstream error.(Retriable)
        - ERROR_DOWNSTREAM_TIMEOUT: Partner downstream timeout.(Retriable)
        - ERROR_AUTHENTICATION_FAILURE: Authentication failed.
      x-nullable: true
      enum:
        - APPROVED
        - DECLINED_GENERAL
        - DECLINED_ACCOUNT_CLOSED
        - DECLINED_UNAUTHORIZED_OPERATION
        - DECLINED_ORIGINAL_TRANSACTION_NOT_EXIST
        - DECLINED_PAYMENT_WINDOW_EXPIRED
        - DECLINED_ORIGINAL_TRANSACTION_INPROGRESS
        - DECLINED_ORIGINAL_TRANSACTION_ALREADY_COMPLETED
        - DECLINED_SUSPECTED_FRAUD
        - ERROR_INVALID_REQUEST
        - ERROR_INTERNAL_ERROR
        - ERROR_DOWNSTREAM_ERROR
        - ERROR_DOWNSTREAM_TIMEOUT
        - ERROR_AUTHENTICATION_FAILURE
